# Autogenerated by nbdev

d = { 'settings': { 'branch': 'master',
                'doc_baseurl': '/rl_opts/',
                'doc_host': 'https://gorkamunoz.github.io',
                'git_url': 'https://github.com/gorkamunoz/rl_opts/',
                'lib_path': 'rl_opts'},
  'syms': { 'rl_opts.analytics': { 'rl_opts.analytics.get_policy_from_dist': ( 'lib_nbs/analytics.html#get_policy_from_dist',
                                                                               'rl_opts/analytics.py'),
                                   'rl_opts.analytics.pdf_discrete_sample': ( 'lib_nbs/analytics.html#pdf_discrete_sample',
                                                                              'rl_opts/analytics.py'),
                                   'rl_opts.analytics.pdf_multimode': ('lib_nbs/analytics.html#pdf_multimode', 'rl_opts/analytics.py'),
                                   'rl_opts.analytics.pdf_powerlaw': ('lib_nbs/analytics.html#pdf_powerlaw', 'rl_opts/analytics.py')},
            'rl_opts.imitation': { 'rl_opts.imitation.PS_imitation': ( 'lib_nbs/imitation_learning.html#ps_imitation',
                                                                       'rl_opts/imitation.py'),
                                   'rl_opts.imitation.PS_imitation.__init__': ( 'lib_nbs/imitation_learning.html#ps_imitation.__init__',
                                                                                'rl_opts/imitation.py'),
                                   'rl_opts.imitation.PS_imitation.reset': ( 'lib_nbs/imitation_learning.html#ps_imitation.reset',
                                                                             'rl_opts/imitation.py'),
                                   'rl_opts.imitation.PS_imitation.update': ( 'lib_nbs/imitation_learning.html#ps_imitation.update',
                                                                              'rl_opts/imitation.py')},
            'rl_opts.learn_and_bench': { 'rl_opts.learn_and_bench.agent_efficiency': ( 'lib_nbs/learning_and_benchmark.html#agent_efficiency',
                                                                                       'rl_opts/learn_and_bench.py'),
                                         'rl_opts.learn_and_bench.average_search_efficiency': ( 'lib_nbs/learning_and_benchmark.html#average_search_efficiency',
                                                                                                'rl_opts/learn_and_bench.py'),
                                         'rl_opts.learn_and_bench.learning': ( 'lib_nbs/learning_and_benchmark.html#learning',
                                                                               'rl_opts/learn_and_bench.py'),
                                         'rl_opts.learn_and_bench.walk_from_policy': ( 'lib_nbs/learning_and_benchmark.html#walk_from_policy',
                                                                                       'rl_opts/learn_and_bench.py')},
            'rl_opts.mfpt': { 'rl_opts.mfpt.Biexp': ('lib_nbs/mfpt.html#biexp', 'rl_opts/mfpt.py'),
                              'rl_opts.mfpt.Biexp.__init__': ('lib_nbs/mfpt.html#biexp.__init__', 'rl_opts/mfpt.py'),
                              'rl_opts.mfpt.Biexp.cdf': ('lib_nbs/mfpt.html#biexp.cdf', 'rl_opts/mfpt.py'),
                              'rl_opts.mfpt.Biexp.dpdf': ('lib_nbs/mfpt.html#biexp.dpdf', 'rl_opts/mfpt.py'),
                              'rl_opts.mfpt.Biexp.pdf': ('lib_nbs/mfpt.html#biexp.pdf', 'rl_opts/mfpt.py'),
                              'rl_opts.mfpt.Biexp.sample': ('lib_nbs/mfpt.html#biexp.sample', 'rl_opts/mfpt.py'),
                              'rl_opts.mfpt.biexp_time_generator': ('lib_nbs/mfpt.html#biexp_time_generator', 'rl_opts/mfpt.py'),
                              'rl_opts.mfpt.constant_velocity_generator': ( 'lib_nbs/mfpt.html#constant_velocity_generator',
                                                                            'rl_opts/mfpt.py'),
                              'rl_opts.mfpt.constant_velocity_generator_2D': ( 'lib_nbs/mfpt.html#constant_velocity_generator_2d',
                                                                               'rl_opts/mfpt.py'),
                              'rl_opts.mfpt.exp_time_generator': ('lib_nbs/mfpt.html#exp_time_generator', 'rl_opts/mfpt.py'),
                              'rl_opts.mfpt.mfpt_informed_rw': ('lib_nbs/mfpt.html#mfpt_informed_rw', 'rl_opts/mfpt.py'),
                              'rl_opts.mfpt.mfpt_informed_rw_2D': ('lib_nbs/mfpt.html#mfpt_informed_rw_2d', 'rl_opts/mfpt.py'),
                              'rl_opts.mfpt.mfpt_rw': ('lib_nbs/mfpt.html#mfpt_rw', 'rl_opts/mfpt.py'),
                              'rl_opts.mfpt.mfpt_rw_2D': ('lib_nbs/mfpt.html#mfpt_rw_2d', 'rl_opts/mfpt.py'),
                              'rl_opts.mfpt.rw_generator': ('lib_nbs/mfpt.html#rw_generator', 'rl_opts/mfpt.py')},
            'rl_opts.numba.rl_framework': { 'rl_opts.numba.rl_framework.Forager': ( 'lib_nbs/rl_framework_numba.html#forager',
                                                                                    'rl_opts/numba/rl_framework.py'),
                                            'rl_opts.numba.rl_framework.Forager._G_upd_full': ( 'lib_nbs/rl_framework_numba.html#forager._g_upd_full',
                                                                                                'rl_opts/numba/rl_framework.py'),
                                            'rl_opts.numba.rl_framework.Forager._G_upd_single_percept': ( 'lib_nbs/rl_framework_numba.html#forager._g_upd_single_percept',
                                                                                                          'rl_opts/numba/rl_framework.py'),
                                            'rl_opts.numba.rl_framework.Forager._H_upd_single_percept': ( 'lib_nbs/rl_framework_numba.html#forager._h_upd_single_percept',
                                                                                                          'rl_opts/numba/rl_framework.py'),
                                            'rl_opts.numba.rl_framework.Forager.__init__': ( 'lib_nbs/rl_framework_numba.html#forager.__init__',
                                                                                             'rl_opts/numba/rl_framework.py'),
                                            'rl_opts.numba.rl_framework.Forager._learn_post_reward': ( 'lib_nbs/rl_framework_numba.html#forager._learn_post_reward',
                                                                                                       'rl_opts/numba/rl_framework.py'),
                                            'rl_opts.numba.rl_framework.Forager.act': ( 'lib_nbs/rl_framework_numba.html#forager.act',
                                                                                        'rl_opts/numba/rl_framework.py'),
                                            'rl_opts.numba.rl_framework.Forager.deliberate': ( 'lib_nbs/rl_framework_numba.html#forager.deliberate',
                                                                                               'rl_opts/numba/rl_framework.py'),
                                            'rl_opts.numba.rl_framework.Forager.deliberate_fixed_policy': ( 'lib_nbs/rl_framework_numba.html#forager.deliberate_fixed_policy',
                                                                                                            'rl_opts/numba/rl_framework.py'),
                                            'rl_opts.numba.rl_framework.Forager.get_state': ( 'lib_nbs/rl_framework_numba.html#forager.get_state',
                                                                                              'rl_opts/numba/rl_framework.py'),
                                            'rl_opts.numba.rl_framework.Forager.init_matrices': ( 'lib_nbs/rl_framework_numba.html#forager.init_matrices',
                                                                                                  'rl_opts/numba/rl_framework.py'),
                                            'rl_opts.numba.rl_framework.Forager.learn': ( 'lib_nbs/rl_framework_numba.html#forager.learn',
                                                                                          'rl_opts/numba/rl_framework.py'),
                                            'rl_opts.numba.rl_framework.Forager.percept_preprocess': ( 'lib_nbs/rl_framework_numba.html#forager.percept_preprocess',
                                                                                                       'rl_opts/numba/rl_framework.py'),
                                            'rl_opts.numba.rl_framework.Forager.probability_distr': ( 'lib_nbs/rl_framework_numba.html#forager.probability_distr',
                                                                                                      'rl_opts/numba/rl_framework.py'),
                                            'rl_opts.numba.rl_framework.Forager.reset_g': ( 'lib_nbs/rl_framework_numba.html#forager.reset_g',
                                                                                            'rl_opts/numba/rl_framework.py'),
                                            'rl_opts.numba.rl_framework.TargetEnv': ( 'lib_nbs/rl_framework_numba.html#targetenv',
                                                                                      'rl_opts/numba/rl_framework.py'),
                                            'rl_opts.numba.rl_framework.TargetEnv.__init__': ( 'lib_nbs/rl_framework_numba.html#targetenv.__init__',
                                                                                               'rl_opts/numba/rl_framework.py'),
                                            'rl_opts.numba.rl_framework.TargetEnv.check_bc': ( 'lib_nbs/rl_framework_numba.html#targetenv.check_bc',
                                                                                               'rl_opts/numba/rl_framework.py'),
                                            'rl_opts.numba.rl_framework.TargetEnv.check_encounter': ( 'lib_nbs/rl_framework_numba.html#targetenv.check_encounter',
                                                                                                      'rl_opts/numba/rl_framework.py'),
                                            'rl_opts.numba.rl_framework.TargetEnv.init_env': ( 'lib_nbs/rl_framework_numba.html#targetenv.init_env',
                                                                                               'rl_opts/numba/rl_framework.py'),
                                            'rl_opts.numba.rl_framework.TargetEnv.update_pos': ( 'lib_nbs/rl_framework_numba.html#targetenv.update_pos',
                                                                                                 'rl_opts/numba/rl_framework.py'),
                                            'rl_opts.numba.rl_framework.TargetEnv.update_pos_disp': ( 'lib_nbs/rl_framework_numba.html#targetenv.update_pos_disp',
                                                                                                      'rl_opts/numba/rl_framework.py'),
                                            'rl_opts.numba.rl_framework._Forager_efficient_H': ( 'lib_nbs/rl_framework_numba.html#_forager_efficient_h',
                                                                                                 'rl_opts/numba/rl_framework.py'),
                                            'rl_opts.numba.rl_framework._Forager_efficient_H.__init__': ( 'lib_nbs/rl_framework_numba.html#_forager_efficient_h.__init__',
                                                                                                          'rl_opts/numba/rl_framework.py'),
                                            'rl_opts.numba.rl_framework._Forager_efficient_H._hmat_upd_single_percept': ( 'lib_nbs/rl_framework_numba.html#_forager_efficient_h._hmat_upd_single_percept',
                                                                                                                          'rl_opts/numba/rl_framework.py'),
                                            'rl_opts.numba.rl_framework._Forager_efficient_H._learn_post_reward': ( 'lib_nbs/rl_framework_numba.html#_forager_efficient_h._learn_post_reward',
                                                                                                                    'rl_opts/numba/rl_framework.py'),
                                            'rl_opts.numba.rl_framework._Forager_efficient_H.act': ( 'lib_nbs/rl_framework_numba.html#_forager_efficient_h.act',
                                                                                                     'rl_opts/numba/rl_framework.py'),
                                            'rl_opts.numba.rl_framework._Forager_efficient_H.deliberate': ( 'lib_nbs/rl_framework_numba.html#_forager_efficient_h.deliberate',
                                                                                                            'rl_opts/numba/rl_framework.py'),
                                            'rl_opts.numba.rl_framework._Forager_efficient_H.deliberate_fixed_policy': ( 'lib_nbs/rl_framework_numba.html#_forager_efficient_h.deliberate_fixed_policy',
                                                                                                                         'rl_opts/numba/rl_framework.py'),
                                            'rl_opts.numba.rl_framework._Forager_efficient_H.get_state': ( 'lib_nbs/rl_framework_numba.html#_forager_efficient_h.get_state',
                                                                                                           'rl_opts/numba/rl_framework.py'),
                                            'rl_opts.numba.rl_framework._Forager_efficient_H.init_matrices': ( 'lib_nbs/rl_framework_numba.html#_forager_efficient_h.init_matrices',
                                                                                                               'rl_opts/numba/rl_framework.py'),
                                            'rl_opts.numba.rl_framework._Forager_efficient_H.learn': ( 'lib_nbs/rl_framework_numba.html#_forager_efficient_h.learn',
                                                                                                       'rl_opts/numba/rl_framework.py'),
                                            'rl_opts.numba.rl_framework._Forager_efficient_H.percept_preprocess': ( 'lib_nbs/rl_framework_numba.html#_forager_efficient_h.percept_preprocess',
                                                                                                                    'rl_opts/numba/rl_framework.py'),
                                            'rl_opts.numba.rl_framework._Forager_efficient_H.probability_distr': ( 'lib_nbs/rl_framework_numba.html#_forager_efficient_h.probability_distr',
                                                                                                                   'rl_opts/numba/rl_framework.py'),
                                            'rl_opts.numba.rl_framework._Forager_efficient_H.reset_g': ( 'lib_nbs/rl_framework_numba.html#_forager_efficient_h.reset_g',
                                                                                                         'rl_opts/numba/rl_framework.py'),
                                            'rl_opts.numba.rl_framework._Forager_original': ( 'lib_nbs/rl_framework_numba.html#_forager_original',
                                                                                              'rl_opts/numba/rl_framework.py'),
                                            'rl_opts.numba.rl_framework._Forager_original.__init__': ( 'lib_nbs/rl_framework_numba.html#_forager_original.__init__',
                                                                                                       'rl_opts/numba/rl_framework.py'),
                                            'rl_opts.numba.rl_framework._Forager_original.act': ( 'lib_nbs/rl_framework_numba.html#_forager_original.act',
                                                                                                  'rl_opts/numba/rl_framework.py'),
                                            'rl_opts.numba.rl_framework._Forager_original.deliberate': ( 'lib_nbs/rl_framework_numba.html#_forager_original.deliberate',
                                                                                                         'rl_opts/numba/rl_framework.py'),
                                            'rl_opts.numba.rl_framework._Forager_original.deliberate_fixed_policy': ( 'lib_nbs/rl_framework_numba.html#_forager_original.deliberate_fixed_policy',
                                                                                                                      'rl_opts/numba/rl_framework.py'),
                                            'rl_opts.numba.rl_framework._Forager_original.get_state': ( 'lib_nbs/rl_framework_numba.html#_forager_original.get_state',
                                                                                                        'rl_opts/numba/rl_framework.py'),
                                            'rl_opts.numba.rl_framework._Forager_original.init_matrices': ( 'lib_nbs/rl_framework_numba.html#_forager_original.init_matrices',
                                                                                                            'rl_opts/numba/rl_framework.py'),
                                            'rl_opts.numba.rl_framework._Forager_original.learn': ( 'lib_nbs/rl_framework_numba.html#_forager_original.learn',
                                                                                                    'rl_opts/numba/rl_framework.py'),
                                            'rl_opts.numba.rl_framework._Forager_original.percept_preprocess': ( 'lib_nbs/rl_framework_numba.html#_forager_original.percept_preprocess',
                                                                                                                 'rl_opts/numba/rl_framework.py'),
                                            'rl_opts.numba.rl_framework._Forager_original.probability_distr': ( 'lib_nbs/rl_framework_numba.html#_forager_original.probability_distr',
                                                                                                                'rl_opts/numba/rl_framework.py'),
                                            'rl_opts.numba.rl_framework._Forager_original.reset_g': ( 'lib_nbs/rl_framework_numba.html#_forager_original.reset_g',
                                                                                                      'rl_opts/numba/rl_framework.py'),
                                            'rl_opts.numba.rl_framework._train_loop_h_efficient': ( 'lib_nbs/rl_framework_numba.html#_train_loop_h_efficient',
                                                                                                    'rl_opts/numba/rl_framework.py'),
                                            'rl_opts.numba.rl_framework._train_loop_original': ( 'lib_nbs/rl_framework_numba.html#_train_loop_original',
                                                                                                 'rl_opts/numba/rl_framework.py'),
                                            'rl_opts.numba.rl_framework.isBetween_c_Vec_numba': ( 'lib_nbs/rl_framework_numba.html#isbetween_c_vec_numba',
                                                                                                  'rl_opts/numba/rl_framework.py'),
                                            'rl_opts.numba.rl_framework.multi_agents_walk': ( 'lib_nbs/rl_framework_numba.html#multi_agents_walk',
                                                                                              'rl_opts/numba/rl_framework.py'),
                                            'rl_opts.numba.rl_framework.pareto_sample': ( 'lib_nbs/rl_framework_numba.html#pareto_sample',
                                                                                          'rl_opts/numba/rl_framework.py'),
                                            'rl_opts.numba.rl_framework.rand_choice_nb': ( 'lib_nbs/rl_framework_numba.html#rand_choice_nb',
                                                                                           'rl_opts/numba/rl_framework.py'),
                                            'rl_opts.numba.rl_framework.run_agents': ( 'lib_nbs/rl_framework_numba.html#run_agents',
                                                                                       'rl_opts/numba/rl_framework.py'),
                                            'rl_opts.numba.rl_framework.single_agent_walk': ( 'lib_nbs/rl_framework_numba.html#single_agent_walk',
                                                                                              'rl_opts/numba/rl_framework.py'),
                                            'rl_opts.numba.rl_framework.train_loop': ( 'lib_nbs/rl_framework_numba.html#train_loop',
                                                                                       'rl_opts/numba/rl_framework.py')},
            'rl_opts.rl_framework': { 'rl_opts.rl_framework.Forager': ('lib_nbs/rl_framework.html#forager', 'rl_opts/rl_framework.py'),
                                      'rl_opts.rl_framework.Forager.__init__': ( 'lib_nbs/rl_framework.html#forager.__init__',
                                                                                 'rl_opts/rl_framework.py'),
                                      'rl_opts.rl_framework.Forager.act': ( 'lib_nbs/rl_framework.html#forager.act',
                                                                            'rl_opts/rl_framework.py'),
                                      'rl_opts.rl_framework.Forager.get_state': ( 'lib_nbs/rl_framework.html#forager.get_state',
                                                                                  'rl_opts/rl_framework.py'),
                                      'rl_opts.rl_framework.PSAgent': ('lib_nbs/rl_framework.html#psagent', 'rl_opts/rl_framework.py'),
                                      'rl_opts.rl_framework.PSAgent.__init__': ( 'lib_nbs/rl_framework.html#psagent.__init__',
                                                                                 'rl_opts/rl_framework.py'),
                                      'rl_opts.rl_framework.PSAgent.deliberate': ( 'lib_nbs/rl_framework.html#psagent.deliberate',
                                                                                   'rl_opts/rl_framework.py'),
                                      'rl_opts.rl_framework.PSAgent.deliberate_fixed_policy': ( 'lib_nbs/rl_framework.html#psagent.deliberate_fixed_policy',
                                                                                                'rl_opts/rl_framework.py'),
                                      'rl_opts.rl_framework.PSAgent.learn': ( 'lib_nbs/rl_framework.html#psagent.learn',
                                                                              'rl_opts/rl_framework.py'),
                                      'rl_opts.rl_framework.PSAgent.percept_preprocess': ( 'lib_nbs/rl_framework.html#psagent.percept_preprocess',
                                                                                           'rl_opts/rl_framework.py'),
                                      'rl_opts.rl_framework.PSAgent.probability_distr': ( 'lib_nbs/rl_framework.html#psagent.probability_distr',
                                                                                          'rl_opts/rl_framework.py'),
                                      'rl_opts.rl_framework.PSAgent.reset_g': ( 'lib_nbs/rl_framework.html#psagent.reset_g',
                                                                                'rl_opts/rl_framework.py'),
                                      'rl_opts.rl_framework.TargetEnv': ('lib_nbs/rl_framework.html#targetenv', 'rl_opts/rl_framework.py'),
                                      'rl_opts.rl_framework.TargetEnv.__init__': ( 'lib_nbs/rl_framework.html#targetenv.__init__',
                                                                                   'rl_opts/rl_framework.py'),
                                      'rl_opts.rl_framework.TargetEnv.check_bc': ( 'lib_nbs/rl_framework.html#targetenv.check_bc',
                                                                                   'rl_opts/rl_framework.py'),
                                      'rl_opts.rl_framework.TargetEnv.check_encounter': ( 'lib_nbs/rl_framework.html#targetenv.check_encounter',
                                                                                          'rl_opts/rl_framework.py'),
                                      'rl_opts.rl_framework.TargetEnv.get_agents_in_sight': ( 'lib_nbs/rl_framework.html#targetenv.get_agents_in_sight',
                                                                                              'rl_opts/rl_framework.py'),
                                      'rl_opts.rl_framework.TargetEnv.get_neighbors_state': ( 'lib_nbs/rl_framework.html#targetenv.get_neighbors_state',
                                                                                              'rl_opts/rl_framework.py'),
                                      'rl_opts.rl_framework.TargetEnv.init_env': ( 'lib_nbs/rl_framework.html#targetenv.init_env',
                                                                                   'rl_opts/rl_framework.py'),
                                      'rl_opts.rl_framework.TargetEnv.update_pos': ( 'lib_nbs/rl_framework.html#targetenv.update_pos',
                                                                                     'rl_opts/rl_framework.py')},
            'rl_opts.utils': { 'rl_opts.utils.coord_mod': ('lib_nbs/utils.html#coord_mod', 'rl_opts/utils.py'),
                               'rl_opts.utils.get_config': ('lib_nbs/utils.html#get_config', 'rl_opts/utils.py'),
                               'rl_opts.utils.get_encounters': ('lib_nbs/utils.html#get_encounters', 'rl_opts/utils.py'),
                               'rl_opts.utils.get_opt': ('lib_nbs/utils.html#get_opt', 'rl_opts/utils.py'),
                               'rl_opts.utils.get_performance': ('lib_nbs/utils.html#get_performance', 'rl_opts/utils.py'),
                               'rl_opts.utils.get_policy': ('lib_nbs/utils.html#get_policy', 'rl_opts/utils.py'),
                               'rl_opts.utils.isBetween_c_Vec': ('lib_nbs/utils.html#isbetween_c_vec', 'rl_opts/utils.py'),
                               'rl_opts.utils.isBetween_c_Vec_nAgents': ( 'lib_nbs/utils.html#isbetween_c_vec_nagents',
                                                                          'rl_opts/utils.py')}}}
